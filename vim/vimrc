set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'Mark'

"FileType support
set filetype=on
filetype plugin on
filetype indent on


set number
set background=dark
colorscheme wombat

set hlsearch
set incsearch
"moving between windows

nmap <silent> <A-k> :wincmd k<CR>
nmap <silent> <A-j> :wincmd j<CR>
nmap <silent> <A-h> :wincmd h<CR>
nmap <silent> <A-l> :wincmd l<CR>

"resize windows
nmap <silent> <C-A-l> :vertical resize +10 <CR>
nmap <silent> <C-A-h> :vertical resize -10 <CR>
nmap <silent> <C-A-j> :resize +10 <CR>
nmap <silent> <C-A-k> :resize -10 <CR>

set ignorecase
set smartindent
set tabstop=4 
set shiftwidth=4 
set expandtab

set smartcase

"ctrlp stuff
set runtimepath^=~/.vim/bundle/ctrlp.vim
set wildignore+=**/*.git,**/*.class,**/*.pyc,**/*.swp,**/*jar,**/*.zip
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'rw'
map <C-b> :CtrlPBuffer<CR>
map <C-d> :CtrlPDir<CR>
let g:ctrlp_extensions = [ 'dir']
let g:ctrlp_match_window = 'results:100'
let g:ctrlp_switch_buffer = 'et'
let g:ctrlp_max_depth = 4

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

"neocomplete
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_auto_select = 1
inoremap <expr> <C-j> ((pumvisible())?("\<C-n>"):("\<C-j>"))
inoremap <expr> <C-k> ((pumvisible())?("\<C-p>"):("\<C-k>"))
" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
  "return (pumvisible() ? "\<C-y>" : "" ) . "\<CR>"
  " For no inserting <CR> key.
  return pumvisible() ? "\<C-y>" : "\<CR>"
endfunction



" yaml indentation
au FileType yaml setlocal tabstop=2 expandtab shiftwidth=2 softtabstop=2

let g:auto_save = 1

let g:mwIgnoreCase = 1
let g:mwDefaultHighlightingPalette = 'maximum' 
" let g:mwDefaultHighlightingNum = 9 
autocmd VimEnter * 2Mark!done
autocmd VimEnter * 3Mark!blok
autocmd VimEnter * 4Mark!todo
autocmd VimEnter * 1Mark!##.*
autocmd VimEnter * 5Mark!doing
autocmd VimEnter * 6Mark!donow



command! Hosts e ~/projects/radioactive/infrastructure/inventory/hosts
command! Raproj cd ~/projects/radioactive
command! Rasearch CtrlP ~/projects/radioactive
command! System CtrlP ~/Dropbox/system
function Tickle()
    let l:timestamp=strftime("%F")
    let l:path = "~/Dropbox/system/tickle-logs/".l:timestamp.".txt" 
    exe "e ".l:path
endfunction

filetype plugin indent on
syntax on

set winaltkeys=no
